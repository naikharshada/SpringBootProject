package com.example.demo.service;

import java.util.List;
import java.util.concurrent.CompletableFuture;
import java.util.stream.Collectors;

import org.mapstruct.Mapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;
import com.example.demo.dto.CustomerDTO;
import com.example.demo.entity.Customer;
import com.example.demo.mapper.CustomerMapper;
import com.example.demo.repository.CustomerRepository;

@Service
public class CustomerService {
	
	@Autowired
	private CustomerRepository customerRepository;
	
	@Autowired
	private CustomerMapper customerMapper;
	
	@Async
	public CompletableFuture<List<CustomerDTO>> createCustomer(List<CustomerDTO> customerDto) {
		List<Customer> cust = customerDto.stream().map(mapper::toEntity).collect(Collectors.toList());
		List<Customer> savedCust = customerRepository.saveAll(cust);
		CompletableFuture.completedFuture(savedCust.stream().map(mapper::toDto).collect(Collectors.toList()));
	}
}
